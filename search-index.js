crystal_doc_search_index_callback({"repository_name":"qrencode","body":"qrencode.cr\n===========\n\n[![CI](https://github.com/woodruffw/qrencode.cr/actions/workflows/ci.yml/badge.svg)](https://github.com/woodruffw/qrencode.cr/actions/workflows/ci.yml)\n\nCrystal bindings for [libqrencode](https://fukuchi.org/works/qrencode/index.html.en).\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  qrencode:\n    github: woodruffw/qrencode.cr\n    branch: master\n```\n\n`libqrencode` is required. On Debian-based systems, it can be installed via:\n\n```bash\n$ sudo apt install libqrencode-dev\n```\n\n## Usage\n\n`QRencode` provides methods for generating a QR symbol from various inputs (ASCII/UTF8 text, numerics,\nKanji (shift-JIS), etc).\n\nIt does *not* perform the task of rendering QR symbol data to an image format (e.g., PNG) -- it's\nup to you (or a client library) to do that.\n\n```crystal\nrequire \"qrencode\"\n\nqr = QRencode::QRcode.new(\"this is my input string\")\n\nqr.version\nqr.width\nqr.data\n\nqr.each_row do |row|\n  # each row is `width` bytes\n  row.each do |byte|\n    if QRencode::Util.black? byte\n      print \"B\"\n    else\n      print \"W\"\n    end\n  end\n  puts\nend\n```\n\nCheck out the [examples/](examples/) directory.\n\n## Contributing\n\n1. Fork it (https://github.com/woodruffw/qrencode/fork)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [woodruffw](https://github.com/woodruffw) William Woodruff - creator, maintainer\n","program":{"html_id":"qrencode/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"qrencode","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"qrencode/QRencode","path":"QRencode.html","kind":"module","full_name":"QRencode","name":"QRencode","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/qrencode.cr","line_number":5,"url":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode.cr#L5"},{"filename":"src/qrencode/enums.cr","line_number":1,"url":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/enums.cr#L1"},{"filename":"src/qrencode/libqrencode.cr","line_number":1,"url":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/libqrencode.cr#L1"},{"filename":"src/qrencode/qrcode.cr","line_number":1,"url":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/qrcode.cr#L1"},{"filename":"src/qrencode/util.cr","line_number":1,"url":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/util.cr#L1"},{"filename":"src/qrencode/version.cr","line_number":1,"url":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/version.cr#L1"}],"repository_name":"qrencode","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.2.3\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Crystal bindings for [libqrencode](https://fukuchi.org/works/qrencode/index.html.en).\nCheck out `QRcode` for methods for generating QR symbols.","summary":"<p>Crystal bindings for <a href=\"https://fukuchi.org/works/qrencode/index.html.en\" target=\"_blank\">libqrencode</a>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"qrencode/QRencode/ECLevel","path":"QRencode/ECLevel.html","kind":"enum","full_name":"QRencode::ECLevel","name":"ECLevel","abstract":false,"superclass":null,"ancestors":[{"html_id":"qrencode/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"qrencode/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"qrencode/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"qrencode/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/qrencode/enums.cr","line_number":3,"url":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/enums.cr#L3"}],"repository_name":"qrencode","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"LOW","name":"LOW","value":"0","doc":null,"summary":null},{"id":"MEDIUM","name":"MEDIUM","value":"1","doc":null,"summary":null},{"id":"QUARTILE","name":"QUARTILE","value":"2","doc":null,"summary":null},{"id":"HIGH","name":"HIGH","value":"3","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"qrencode/QRencode","kind":"module","full_name":"QRencode","name":"QRencode"},"doc":"Error-correction levels for QR symbol generation.","summary":"<p>Error-correction levels for QR symbol generation.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"high?-instance-method","html_id":"high?-instance-method","name":"high?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/enums.cr#L7","def":{"name":"high?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == HIGH"}},{"id":"low?-instance-method","html_id":"low?-instance-method","name":"low?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/enums.cr#L4","def":{"name":"low?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LOW"}},{"id":"medium?-instance-method","html_id":"medium?-instance-method","name":"medium?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/enums.cr#L5","def":{"name":"medium?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == MEDIUM"}},{"id":"quartile?-instance-method","html_id":"quartile?-instance-method","name":"quartile?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/enums.cr#L6","def":{"name":"quartile?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == QUARTILE"}}],"macros":[],"types":[]},{"html_id":"qrencode/QRencode/EncodeError","path":"QRencode/EncodeError.html","kind":"class","full_name":"QRencode::EncodeError","name":"EncodeError","abstract":false,"superclass":{"html_id":"qrencode/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"qrencode/SystemError","kind":"module","full_name":"SystemError","name":"SystemError"},{"html_id":"qrencode/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"qrencode/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"qrencode/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/qrencode/qrcode.cr","line_number":3,"url":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/qrcode.cr#L3"}],"repository_name":"qrencode","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"qrencode/SystemError","kind":"module","full_name":"SystemError","name":"SystemError"}],"extended_modules":[{"html_id":"qrencode/SystemError/ClassMethods","kind":"module","full_name":"SystemError::ClassMethods","name":"ClassMethods"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"qrencode/QRencode","kind":"module","full_name":"QRencode","name":"QRencode"},"doc":"Raised on `QRcode` initialization failure.","summary":"<p>Raised on <code><a href=\"../QRencode/QRcode.html\">QRcode</a></code> initialization failure.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"qrencode/QRencode/EncodeMode","path":"QRencode/EncodeMode.html","kind":"enum","full_name":"QRencode::EncodeMode","name":"EncodeMode","abstract":false,"superclass":null,"ancestors":[{"html_id":"qrencode/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"qrencode/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"qrencode/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"qrencode/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/qrencode/enums.cr","line_number":12,"url":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/enums.cr#L12"}],"repository_name":"qrencode","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"MODE_NUL","name":"MODE_NUL","value":"-1","doc":null,"summary":null},{"id":"MODE_NUM","name":"MODE_NUM","value":"0","doc":null,"summary":null},{"id":"MODE_AN","name":"MODE_AN","value":"1","doc":null,"summary":null},{"id":"MODE_8","name":"MODE_8","value":"2","doc":null,"summary":null},{"id":"MODE_KANJI","name":"MODE_KANJI","value":"3","doc":null,"summary":null},{"id":"MODE_STRUCTURE","name":"MODE_STRUCTURE","value":"4","doc":null,"summary":null},{"id":"MODE_ECI","name":"MODE_ECI","value":"5","doc":null,"summary":null},{"id":"MODE_FNC1FIRST","name":"MODE_FNC1FIRST","value":"6","doc":null,"summary":null},{"id":"MODE_FNC1SECOND","name":"MODE_FNC1SECOND","value":"7","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"qrencode/QRencode","kind":"module","full_name":"QRencode","name":"QRencode"},"doc":"Encoding modes for QR symbol generation.\nNOTE: `QR_MODE_NUL` and `QR_MODE_STRUCTURE` are for internal use only.","summary":"<p>Encoding modes for QR symbol generation.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"mode_8?-instance-method","html_id":"mode_8?-instance-method","name":"mode_8?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/enums.cr#L16","def":{"name":"mode_8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == MODE_8"}},{"id":"mode_an?-instance-method","html_id":"mode_an?-instance-method","name":"mode_an?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/enums.cr#L15","def":{"name":"mode_an?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == MODE_AN"}},{"id":"mode_eci?-instance-method","html_id":"mode_eci?-instance-method","name":"mode_eci?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/enums.cr#L19","def":{"name":"mode_eci?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == MODE_ECI"}},{"id":"mode_fnc1_first?-instance-method","html_id":"mode_fnc1_first?-instance-method","name":"mode_fnc1_first?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/enums.cr#L20","def":{"name":"mode_fnc1_first?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == MODE_FNC1FIRST"}},{"id":"mode_fnc1_second?-instance-method","html_id":"mode_fnc1_second?-instance-method","name":"mode_fnc1_second?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/enums.cr#L21","def":{"name":"mode_fnc1_second?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == MODE_FNC1SECOND"}},{"id":"mode_kanji?-instance-method","html_id":"mode_kanji?-instance-method","name":"mode_kanji?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/enums.cr#L17","def":{"name":"mode_kanji?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == MODE_KANJI"}},{"id":"mode_nul?-instance-method","html_id":"mode_nul?-instance-method","name":"mode_nul?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/enums.cr#L13","def":{"name":"mode_nul?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == MODE_NUL"}},{"id":"mode_num?-instance-method","html_id":"mode_num?-instance-method","name":"mode_num?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/enums.cr#L14","def":{"name":"mode_num?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == MODE_NUM"}},{"id":"mode_structure?-instance-method","html_id":"mode_structure?-instance-method","name":"mode_structure?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/enums.cr#L18","def":{"name":"mode_structure?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == MODE_STRUCTURE"}}],"macros":[],"types":[]},{"html_id":"qrencode/QRencode/QRcode","path":"QRencode/QRcode.html","kind":"class","full_name":"QRencode::QRcode","name":"QRcode","abstract":false,"superclass":{"html_id":"qrencode/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"qrencode/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"qrencode/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/qrencode/qrcode.cr","line_number":8,"url":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/qrcode.cr#L8"}],"repository_name":"qrencode","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"qrencode/QRencode","kind":"module","full_name":"QRencode","name":"QRencode"},"doc":"The main class for QR symbol generation.","summary":"<p>The main class for QR symbol generation.</p>","class_methods":[],"constructors":[{"id":"new(string:String,version=0,level=ECLevel::MEDIUM,hint=EncodeMode::MODE_8,casesensitive=true,micro=false)-class-method","html_id":"new(string:String,version=0,level=ECLevel::MEDIUM,hint=EncodeMode::MODE_8,casesensitive=true,micro=false)-class-method","name":"new","doc":"Creates a new `QRcode` instance from *string*.\n\n*version* is a QR version code. If `0` (the default) is given, then `libqrencode` chooses\nthe minimum possible version.\n\n*level* is an `ECLevel` value, corresponding to the level of error-correction to apply.\n\n*hint* is an `EncodeMode` value, corresponding to the encoding used by the QR code.\n\nIf *casesensitive* is set to `false`, then the data is encoded in all caps (as applies).\n\nIf *micro* is set to `true`, then a Micro QR code is generated instead (experimental).\n\nRaises `EncodeError` on any of the following failure conditions:\n* The given *string* is invalid given *hint* (`EINVAL`)\n* Memory allocation fails (`ENOMEM`)\n* The given *string* is too large to fit into a QR code (`ERANGE`)\n\n```\nqr = QRencode::QRcode.new(\"hello\")\n# Crystal strings are UTF-8, so this works without `EncodeMode::MODE_KANJI`!\nqr2 = QRencode::QRcode.new(\"こんにちは\")\n```","summary":"<p>Creates a new <code><a href=\"../QRencode/QRcode.html\">QRcode</a></code> instance from <em>string</em>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"},{"name":"version","doc":null,"default_value":"0","external_name":"version","restriction":""},{"name":"level","doc":null,"default_value":"ECLevel::MEDIUM","external_name":"level","restriction":""},{"name":"hint","doc":null,"default_value":"EncodeMode::MODE_8","external_name":"hint","restriction":""},{"name":"casesensitive","doc":null,"default_value":"true","external_name":"casesensitive","restriction":""},{"name":"micro","doc":null,"default_value":"false","external_name":"micro","restriction":""}],"args_string":"(string : String, version = <span class=\"n\">0</span>, level = <span class=\"t\">ECLevel</span><span class=\"t\">::</span><span class=\"t\">MEDIUM</span>, hint = <span class=\"t\">EncodeMode</span><span class=\"t\">::</span><span class=\"t\">MODE_8</span>, casesensitive = <span class=\"n\">true</span>, micro = <span class=\"n\">false</span>)","source_link":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/qrcode.cr#L44","def":{"name":"new","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"},{"name":"version","doc":null,"default_value":"0","external_name":"version","restriction":""},{"name":"level","doc":null,"default_value":"ECLevel::MEDIUM","external_name":"level","restriction":""},{"name":"hint","doc":null,"default_value":"EncodeMode::MODE_8","external_name":"hint","restriction":""},{"name":"casesensitive","doc":null,"default_value":"true","external_name":"casesensitive","restriction":""},{"name":"micro","doc":null,"default_value":"false","external_name":"micro","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(string, version, level, hint, casesensitive, micro)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(data:Bytes,version=0,level=ECLevel::MEDIUM,micro=false)-class-method","html_id":"new(data:Bytes,version=0,level=ECLevel::MEDIUM,micro=false)-class-method","name":"new","doc":"Creates a new `QRcode` instance from *data*.\n\nAlways uses `EncodeMode::MODE_8`.","summary":"<p>Creates a new <code><a href=\"../QRencode/QRcode.html\">QRcode</a></code> instance from <em>data</em>.</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"},{"name":"version","doc":null,"default_value":"0","external_name":"version","restriction":""},{"name":"level","doc":null,"default_value":"ECLevel::MEDIUM","external_name":"level","restriction":""},{"name":"micro","doc":null,"default_value":"false","external_name":"micro","restriction":""}],"args_string":"(data : Bytes, version = <span class=\"n\">0</span>, level = <span class=\"t\">ECLevel</span><span class=\"t\">::</span><span class=\"t\">MEDIUM</span>, micro = <span class=\"n\">false</span>)","source_link":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/qrcode.cr#L62","def":{"name":"new","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"},{"name":"version","doc":null,"default_value":"0","external_name":"version","restriction":""},{"name":"level","doc":null,"default_value":"ECLevel::MEDIUM","external_name":"level","restriction":""},{"name":"micro","doc":null,"default_value":"false","external_name":"micro","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(data, version, level, micro)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"data:Bytes-instance-method","html_id":"data:Bytes-instance-method","name":"data","doc":"The actual module (dot) data of the QR symbol. `Util` contains methods for interacting\nwith these bytes.","summary":"<p>The actual module (dot) data of the QR symbol.</p>","abstract":false,"args":[],"args_string":" : Bytes","source_link":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/qrcode.cr#L19","def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"@data"}},{"id":"each_row(&)-instance-method","html_id":"each_row(&)-instance-method","name":"each_row","doc":"Yields each row in `#data`.","summary":"<p>Yields each row in <code><a href=\"../QRencode/QRcode.html#data:Bytes-instance-method\">#data</a></code>.</p>","abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/qrcode.cr#L82","def":{"name":"each_row","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"data.each_slice(width) do |slice|\n  yield slice\nend"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destroys the instance's internal state.","summary":"<p>Destroys the instance's internal state.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/qrcode.cr#L77","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibQRencode.free(qrcode_p)"}},{"id":"version:Int32-instance-method","html_id":"version:Int32-instance-method","name":"version","doc":"The version of the QR symbol.","summary":"<p>The version of the QR symbol.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/qrcode.cr#L12","def":{"name":"version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@version"}},{"id":"width:Int32-instance-method","html_id":"width:Int32-instance-method","name":"width","doc":"The width of the QR symbol.","summary":"<p>The width of the QR symbol.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/qrcode.cr#L15","def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@width"}}],"macros":[],"types":[]},{"html_id":"qrencode/QRencode/Util","path":"QRencode/Util.html","kind":"module","full_name":"QRencode::Util","name":"Util","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/qrencode/util.cr","line_number":3,"url":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/util.cr#L3"}],"repository_name":"qrencode","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"qrencode/QRencode/Util","kind":"module","full_name":"QRencode::Util","name":"Util"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"qrencode/QRencode","kind":"module","full_name":"QRencode","name":"QRencode"},"doc":"Utility methods for `QRencode`.","summary":"<p>Utility methods for <code><a href=\"../QRencode.html\">QRencode</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"black?(byte:UInt8)-instance-method","html_id":"black?(byte:UInt8)-instance-method","name":"black?","doc":"Returns `true` if the given *byte* is a black module (dot).","summary":"<p>Returns <code>true</code> if the given <em>byte</em> is a black module (dot).</p>","abstract":false,"args":[{"name":"byte","doc":null,"default_value":"","external_name":"byte","restriction":"UInt8"}],"args_string":"(byte : UInt8)","source_link":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/util.cr#L7","def":{"name":"black?","args":[{"name":"byte","doc":null,"default_value":"","external_name":"byte","restriction":"UInt8"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(byte & 1) == 1"}},{"id":"white?(byte:UInt8)-instance-method","html_id":"white?(byte:UInt8)-instance-method","name":"white?","doc":"Returns `true` if the given *byte* is a white module (dot).","summary":"<p>Returns <code>true</code> if the given <em>byte</em> is a white module (dot).</p>","abstract":false,"args":[{"name":"byte","doc":null,"default_value":"","external_name":"byte","restriction":"UInt8"}],"args_string":"(byte : UInt8)","source_link":"https://github.com/woodruffw/qrencode.cr/blob/0b58b7cb7443f4874b78993c090caf8a1d03b3a9/src/qrencode/util.cr#L12","def":{"name":"white?","args":[{"name":"byte","doc":null,"default_value":"","external_name":"byte","restriction":"UInt8"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(byte & 1) == 0"}}],"macros":[],"types":[]}]}]}})